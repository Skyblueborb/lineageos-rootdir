#!/bin/bash

ANDROID_BUILD_TOP="$(dirname $(realpath "$0"))"
[[ "${ANDROID_BUILD_TOP##*/}" == "lineageos-rootdir" ]] && ANDROID_BUILD_TOP="$(dirname "$ANDROID_BUILD_TOP")"
PATCHES_DIR=$ANDROID_BUILD_TOP/lineageos-rootdir/patches
CHECK="$(echo $1 | grep -q check && echo 1)"
GERRIT_USERNAME="$(git config review.review.lineageos.org.username)"

function repopick() {
    if [[ "$CHECK" = "1" ]]; then
        echo -n "${@: -1} - " ; ssh lineage-gerrit gerrit query ${@: -1} --format=JSON | jq --slurp -r '.[0].status'
    else
        ${ANDROID_BUILD_TOP}/vendor/lineage/build/tools/repopick.py \
            -g "ssh://$GERRIT_USERNAME@review.lineageos.org:29418" $@ &
    fi
}

function repopickchain() {
    if [[ "$CHECK" = "1" ]]; then
        echo -n "$1 - " ; ssh lineage-gerrit gerrit query $1 --format=JSON | jq --slurp -r '.[0].status'
    else
        `${ANDROID_BUILD_TOP}/gen_chain $@`
    fi
}

function rc() {
    echo `${ANDROID_BUILD_TOP}/gen_chain $@ | cut -b10-`
}

apply_patch() {
    echo -e "${GREEN}Applying patch...${NOCOLOR}"
    echo -e "${LIGHTBLUE}Target repo:${NOCOLOR} $1"
    echo -e "${LIGHTBLUE}Patch file:${NOCOLOR} $2"

    if [ -d "$ANDROID_BUILD_TOP/$1" ] && [ -f "$2" ]; then
        cd "$1"
        git am -3 --ignore-whitespace "$2"
        cd "$ANDROID_BUILD_TOP" && echo ""
    else
        echo "Can't find dir $1 or patch file $2, skipping patch"
    fi
}


apply_patch_recursive() {
    echo -e "${GREEN}Applying patches recursively...${NOCOLOR}"
    echo -e "${LIGHTBLUE}Target directory:${NOCOLOR} $1"
    echo -e "${LIGHTBLUE}Patch directory:${NOCOLOR} $2"

    # Check if the target and patch directories exist
    if [ ! -d "$ANDROID_BUILD_TOP/$1" ]; then
        echo "Target directory $1 not found, exiting."
        return 1
    fi

    if [ ! -d "$2" ]; then
        echo "Patch directory $2 not found, exiting."
        return 1
    fi

    # Iterate over each .patch file in the patch directory
    for patch_file in "$2"/*.patch; do
        if [ -f "$patch_file" ]; then
            # Call apply_patch for each .patch file
            apply_patch "$1" "$patch_file"
        else
            echo "No .patch files found in $2, skipping."
        fi
    done
}

#
# _examples_
#
# # repo/1
# changes=(
#     2137 # hello
#     `rc 2137` # hello (chain)
# )
# repopick ${changes[@]}
#
# # repo/2
# repopickchain 2137 # hello (chain)
#
# # repo/3
# repopick 2137 # hello
#

# packages/apps/Trebuchet
repopick 407612 # Trebuchet: Eleven -> Twelve

# vendor/lineage
repopick 407581 # common: Eleven -> Twelve

# Display HAL
apply_patch_recursive "hardware/qcom-caf/sm8150/display" "$PATCHES_DIR/hardware_qcom-caf_sm8150_display"

# Custom OTA
apply_patch "packages/apps/Updater" "$PATCHES_DIR/packages_apps_Updater/custom_ota.patch"

# frameworks/base
## FaceUnlock
apply_patch_recursive "frameworks/base" "$PATCHES_DIR/frameworks_base/faceunlock"
## GPhotosSpoof
apply_patch "frameworks/base" "$PATCHES_DIR/frameworks_base/0001-Import-debloated-PixelPropUtils.patch"
## Three Finger Screenshot
apply_patch "frameworks/base" "$PATCHES_DIR/frameworks_base/0001-base-Add-three-fingers-swipe-to-screenshot-1-2.patch"

# packages/apps/Settings
## FaceUnlock
apply_patch_recursive "packages/apps/Settings" "$PATCHES_DIR/packages_apps_Settings/faceunlock"
## Three Finger Screenshot
apply_patch "packages/apps/Settings" "$PATCHES_DIR/packages_apps_Settings/0001-Settings-Add-three-fingers-swipe-to-screenshot-2-2.patch"

# vendor/lineage
## FaceUnlock
apply_patch "vendor/lineage" "$PATCHES_DIR/vendor_lineage/0001-config-Switch-to-AOSPA-s-face-unlock-implementation.patch"

wait
